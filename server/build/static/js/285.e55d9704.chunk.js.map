{"version":3,"file":"static/js/285.e55d9704.chunk.js","mappings":"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","sources":["components/Breadcrum.jsx","components/InputSearch.jsx","components/LightBox.jsx","components/Modal/ConfirmModal.jsx","components/Title.jsx","hooks/useLightBox.js","hooks/useLoading.js","pages/app/MyLessons/Survey/Answer.jsx","pages/app/MyLessons/Survey/FormSurvey.jsx","pages/app/MyLessons/Survey/ListSurvey.jsx","pages/app/MyLessons/Survey/index.jsx","pages/app/MyLessons/Survey/preview.jsx"],"sourcesContent":["export default function Breadcrumb({ title, setIsOpen, isOpen, menu }) {\r\n  return (\r\n    <div className=\"flex justify-start items-center bg-white shadow \">\r\n      <div className=\"px-2 sm:px-6 lg:px-4\">\r\n        {isOpen ? (\r\n          <svg\r\n            onClick={() => setIsOpen(!isOpen)}\r\n            className=\"  z-30 flex items-center cursor-pointer right-10 top-6\"\r\n            fill=\"#000000\"\r\n            viewBox=\"0 0 100 80\"\r\n            width=\"20\"\r\n            height=\"20\"\r\n          >\r\n            <rect width=\"10\" height=\"100\"></rect>\r\n            <rect x=\"30\" width=\"10\" height=\"100\"></rect>\r\n            <rect x=\"60\" width=\"10\" height=\"100\"></rect>\r\n          </svg>\r\n        ) : (\r\n          <svg\r\n            onClick={() => setIsOpen(!isOpen)}\r\n            className=\"  z-30 flex items-center cursor-pointer right-10 top-6\"\r\n            fill=\"#000000\"\r\n            viewBox=\"0 0 100 80\"\r\n            width=\"20\"\r\n            height=\"20\"\r\n          >\r\n            <rect width=\"100\" height=\"10\"></rect>\r\n            <rect y=\"30\" width=\"100\" height=\"10\"></rect>\r\n            <rect y=\"60\" width=\"100\" height=\"10\"></rect>\r\n          </svg>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className=\"text-base py-2 px-2 sm:px-6 lg:px-4  font-medium text-gray-700\">\r\n          {title && title}\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { SearchIcon } from \"@heroicons/react/outline\";\r\nimport React from \"react\";\r\n\r\nconst InputSearch = ({ onChange, className, placeholder }) => {\r\n  return (\r\n    <form>\r\n      <div className=\"flex relative\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder={placeholder ? placeholder : \"Search\"}\r\n          className={`w-full py-3 pl-12 pr-4 text-gray-500 border rounded-md outline-none bg-gray-50 focus:bg-white focus:border-indigo-600 ${className}`}\r\n        />\r\n        <SearchIcon className=\"absolute top-0 bottom-0 w-6 h-6 my-auto text-gray-400 left-3\" />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputSearch;\r\n","import Light from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\"; // This only needs to be imported once in your app\r\n\r\nexport default function LightBox({\r\n  images = [],\r\n  photoIndex,\r\n  isLightBoxOpen,\r\n  closePortal,\r\n  setPhotoIndex,\r\n}) {\r\n  if (!isLightBoxOpen) {\r\n    return null;\r\n  }\r\n  if (typeof images === \"string\") {\r\n    return (\r\n      <Light\r\n        mainSrc={images}\r\n        onCloseRequest={closePortal}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Light\r\n      mainSrc={images[photoIndex]}\r\n      nextSrc={images[(photoIndex + 1) % images.length]}\r\n      prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n      onCloseRequest={closePortal}\r\n      onMovePrevRequest={() =>\r\n        setPhotoIndex((photoIndex + images.length - 1) % images.length)\r\n      }\r\n      onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\r\n    />\r\n  );\r\n}\r\n","/* This example requires Tailwind CSS v2.0+ */\r\nimport { Fragment, useRef, useState } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\n\r\nexport default function ConfirmModal({\r\n  title = \"Are you sure to delete ? \",\r\n  content = \"\",\r\n  confirmButton = \"Confirm\",\r\n  onClickConfirm,\r\n  cancelButton = \"Cancel\",\r\n  onClickCancel,\r\n  type,\r\n  icon,\r\n}) {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"fixed z-10 inset-0 overflow-y-auto\"\r\n        initialFocus={cancelButtonRef}\r\n        onClose={setOpen}\r\n      >\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span\r\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"sm:flex sm:items-start\">\r\n                  {icon && (\r\n                    <div\r\n                      className={`mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full ${\r\n                        type === \"danger\"\r\n                          ? `bg-red-100`\r\n                          : type === \"submit\" && \"bg-blue-100\"\r\n                      } sm:mx-0 sm:h-10 sm:w-10`}\r\n                    >\r\n                      {icon}\r\n                    </div>\r\n                  )}\r\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                    <Dialog.Title\r\n                      as=\"h3\"\r\n                      className=\"text-lg leading-6 font-medium text-gray-900\"\r\n                    >\r\n                      {title}\r\n                    </Dialog.Title>\r\n                    <div className=\"mt-2\">\r\n                      <p className=\"text-sm text-gray-500\">{content}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={`w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 \r\n                  ${\r\n                    type === \"submit\"\r\n                      ? \"bg-blue-600 hover:bg-blue-700 focus:ring-blue-500 \"\r\n                      : \"bg-red-600 hover:bg-red-700 focus:ring-red-500 \"\r\n                  } text-base font-medium text-white focus:outline-none focus:ring-2 focus:ring-offset-2  sm:ml-3 sm:w-auto sm:text-sm`}\r\n                  onClick={() => onClickConfirm()}\r\n                >\r\n                  {confirmButton}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={() => onClickCancel()}\r\n                  ref={cancelButtonRef}\r\n                >\r\n                  {cancelButton}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Title = ({ title, subtitle }) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl text-gray-800 font-semibold\">{title}</h1>\r\n      <p className=\"mt-3 text-gray-500\">{subtitle && subtitle}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useLightBox() {\r\n  const [isLightBoxOpen, setLightBoxOpen] = useState(false);\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  const open = () => setLightBoxOpen(true);\r\n  const close = () => {\r\n    setLightBoxOpen(false);\r\n    setPhotoIndex(0);\r\n  };\r\n  return {\r\n    isLightBoxOpen,\r\n    setLightBoxOpen,\r\n    photoIndex,\r\n    setPhotoIndex,\r\n    open,\r\n    close,\r\n  };\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport function useLoading(defaultValue = false) {\r\n  const [loading, setLoading] = useState(defaultValue);\r\n  const stopLoading = () => {\r\n    setLoading(false);\r\n  };\r\n  const startLoading = () => {\r\n    setLoading(true);\r\n  };\r\n  return {\r\n    isLoading: loading,\r\n    stopLoading,\r\n    startLoading,\r\n  };\r\n}\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Col, Row, Button, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { Modal } from \"antd\";\r\n\r\nfunction Answer({ idPreview, showModal, setShowModal }) {\r\n  //initialise Collect answer\r\n  const [CollectAnswer, setCollectAnswer] = useState([]);\r\n\r\n  //get idsurvey\r\n  // const idPreview = useParams();\r\n\r\n  //handle survey details\r\n  const [SurveyJsonObjects, setSurveyJsonObjects] = useState({\r\n    quizQuestions: [],\r\n    quizName: \"\",\r\n    quizDescription: \"\",\r\n    _id: \"\",\r\n  });\r\n\r\n  const [value, setValue] = useState([]);\r\n\r\n  //get survey details\r\n  useEffect(() => {\r\n    async function SurveyDetails() {\r\n      await axios\r\n        .get(\r\n          `http://localhost:3000/spacetune/api/survey/detailSurvey/${idPreview}`\r\n        )\r\n        .then((response) => {\r\n          setSurveyJsonObjects(response.data);\r\n          let value = response.data.quizQuestions.map((q, i) => {\r\n            if (q.typeQuestion === \"image\") {\r\n              return { answer: [], question: q._id, type: q.typeQuestion };\r\n            } else {\r\n              return { answer: [], question: q._id };\r\n            }\r\n          });\r\n          setCollectAnswer(value);\r\n          let warning = value[0].question;\r\n          setValue(warning);\r\n        });\r\n    }\r\n    SurveyDetails();\r\n  }, [idPreview.idPreview, value]);\r\n\r\n  //handle multiple_choices\r\n  function handleMultipleChoices(i, c, e) {\r\n    const values = [...CollectAnswer];\r\n    if (e.target.checked) values[i].answer.push(e.target.value);\r\n    //add when it's checked\r\n    else {\r\n      let index = values[i].answer.indexOf(c);\r\n      values[i].answer.splice(index, 1); //removed when it's unchecked\r\n    }\r\n    setCollectAnswer(values);\r\n  }\r\n\r\n  //handle Unique Choices\r\n  function handleUniqueChoice(i, c, e) {\r\n    const values = [...CollectAnswer];\r\n    values[i].answer.push(e.target.value);\r\n    setCollectAnswer(values);\r\n  }\r\n\r\n  //handle text inputs\r\n  function handleChangeChoice(i, e) {\r\n    const values = [...CollectAnswer];\r\n    values[i].answer[0] = e.target.value;\r\n    setCollectAnswer(values);\r\n  }\r\n\r\n  //Submit FormSurvey\r\n  let handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //get SurveyId\r\n    let quizId = SurveyJsonObjects._id;\r\n    //get UserConnected ID\r\n    let token = localStorage.getItem(\"token\");\r\n\r\n    axios\r\n      .post(\r\n        `http://localhost:3000/spacetune/api/survey/answer`,\r\n        { answers: CollectAnswer, quizId },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authorization: `${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err, message) => {\r\n        console.log(message, err);\r\n      });\r\n\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={`Answer ${SurveyJsonObjects.quizName}`}\r\n      visible={showModal}\r\n      width={500}\r\n      height={\"h-full\"}\r\n      footer={null}\r\n      onCancel={() => setShowModal(false)}\r\n      centered\r\n    >\r\n      <div key={SurveyJsonObjects._id} className=\"container\">\r\n        <h3 className=\"text-base mb-5\">\r\n          <span className=\"font-medium text-blue-600\">Description: </span>\r\n          {SurveyJsonObjects.quizDescription}\r\n        </h3>\r\n        <Form onSubmit={handleSubmit}>\r\n          {SurveyJsonObjects.quizQuestions.map((question, i) => {\r\n            return (\r\n              <div key={i} className=\"row\">\r\n                <div className=\"col-7\">\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                    <Form.Text value={question.question}>\r\n                      {\" \"}\r\n                      <strong>Question {1 + i} : </strong>\r\n                    </Form.Text>\r\n                    <Form.Label key={i} className=\"mb-2\">\r\n                      {\" \"}\r\n                      {question.question} ?\r\n                    </Form.Label>\r\n                    {question.choices.map((choice, c) => {\r\n                      return (\r\n                        <Form.Group key={c} className=\"mb-3\">\r\n                          {(() => {\r\n                            switch (question.typeQuestion) {\r\n                              case \"uniqueChoice\":\r\n                                return (\r\n                                  <Row>\r\n                                    <Col xs={1} style={{ width: \"5.33%\" }}>\r\n                                      <Form.Check\r\n                                        key={c}\r\n                                        style={{ fontSize: \"1.4em\" }}\r\n                                        type=\"radio\"\r\n                                        name=\"radioChoices\"\r\n                                        value={choice}\r\n                                        onChange={(e) => {\r\n                                          handleUniqueChoice(i, c, e);\r\n                                        }}\r\n                                      />\r\n                                    </Col>\r\n                                    <Col xs={10} style={{ width: \"88.3%\" }}>\r\n                                      <Form.Text name=\"answer\">\r\n                                        {choice}\r\n                                      </Form.Text>\r\n                                    </Col>\r\n                                  </Row>\r\n                                );\r\n                              case \"multipleChoice\":\r\n                                return (\r\n                                  <Row>\r\n                                    <Col xs={1} style={{ width: \"5.33%\" }}>\r\n                                      <Form.Check\r\n                                        key={c}\r\n                                        style={{ fontSize: \"1.4em\" }}\r\n                                        type=\"checkbox\"\r\n                                        value={choice}\r\n                                        onChange={(e) => {\r\n                                          handleMultipleChoices(i, c, e);\r\n                                        }}\r\n                                      />\r\n                                    </Col>\r\n                                    <Col xs={10} style={{ width: \"88.3%\" }}>\r\n                                      <Form.Text name=\"choice\">\r\n                                        {choice}\r\n                                      </Form.Text>\r\n                                    </Col>\r\n                                  </Row>\r\n                                );\r\n                              default:\r\n                                return <div></div>;\r\n                            }\r\n                          })()}\r\n                        </Form.Group>\r\n                      );\r\n                    })}\r\n                    {(() => {\r\n                      switch (question.typeQuestion) {\r\n                        case \"text\":\r\n                          return (\r\n                            <Form.Control\r\n                              size=\"sm\"\r\n                              name=\"answer\"\r\n                              type=\"text\"\r\n                              placeholder=\"Enter your answer\"\r\n                              onChange={(e) => {\r\n                                handleChangeChoice(i, e);\r\n                              }}\r\n                            />\r\n                          );\r\n                        case \"number\":\r\n                          return (\r\n                            <Form.Control\r\n                              size=\"sm\"\r\n                              name=\"answer\"\r\n                              type=\"number\"\r\n                              placeholder=\"Enter a number\"\r\n                              onChange={(e) => {\r\n                                handleChangeChoice(i, e);\r\n                              }}\r\n                            />\r\n                          );\r\n\r\n                        default:\r\n                          break;\r\n                      }\r\n                    })()}\r\n                  </Form.Group>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"flex justify-end mt-5 mb-2 bg-slate-100 text-blue-600\"\r\n          >\r\n            Submit your answers\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./survey.css\";\r\nimport { Accordion, Form, Col, Row } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport { TrashIcon } from \"evergreen-ui\";\r\nimport { Button } from \"antd\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst typeQuestion = [\r\n  {\r\n    label: \"Multiple choice\",\r\n    value: \"multipleChoice\",\r\n  },\r\n  {\r\n    label: \"Unique choice\",\r\n    value: \"uniqueChoice\",\r\n  },\r\n  {\r\n    label: \"Short answer\",\r\n    value: \"text\",\r\n  },\r\n  {\r\n    label: \"Number\",\r\n    value: \"number\",\r\n  },\r\n];\r\n\r\nlet Select_Type_Question = typeQuestion.map((option, key) => (\r\n  <option key={key} value={option.value}>\r\n    {option.label}{\" \"}\r\n  </option>\r\n));\r\n\r\nconst Formquiz = ({ setquiz, editquiz, setEditquiz }) => {\r\n  const [Formquiz, setFormquiz] = useState({\r\n    quizName: \"\",\r\n    quizDescription: \"\",\r\n    quizQuestions: [\r\n      {\r\n        question: \"\",\r\n        typeQuestion: \"\",\r\n        choices: [\"\", \"\"],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const { id } = useParams();\r\n  //handle quizName & quizDescription\r\n  let handleChange = (event) => {\r\n    setFormquiz((prevProps) => ({\r\n      ...prevProps,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  //handle question\r\n  function handleChangeQuestion(i, event) {\r\n    const values = { ...Formquiz };\r\n    values.quizQuestions[i].question = event.target.value;\r\n    setFormquiz(values);\r\n  }\r\n\r\n  //handle type quesiton\r\n  function handleChangeTypeQuestion(i, event) {\r\n    const values = { ...Formquiz };\r\n    values.quizQuestions[i].typeQuestion = event.target.value;\r\n    setFormquiz(values);\r\n  }\r\n\r\n  //handle choices inputs\r\n  function handleChangeChoices(i, c, event) {\r\n    const values = { ...Formquiz };\r\n    values.quizQuestions[i].choices[c] = event.target.value;\r\n    setFormquiz(values);\r\n  }\r\n\r\n  //Add Accordion (Question)\r\n  let handleAddClick = () => {\r\n    let values = [...Formquiz.quizQuestions];\r\n    values.push({\r\n      question: \"\",\r\n      typeQuestion: \"\",\r\n      choices: [\"\", \"\"],\r\n    });\r\n    setFormquiz((prev) => ({ ...prev, quizQuestions: values }));\r\n  };\r\n\r\n  //Delete Accordion (Question)\r\n  let handleDeleteClick = (i) => {\r\n    const values = [...Formquiz.quizQuestions];\r\n    values.splice(i, 1);\r\n    setFormquiz((prev) => ({ ...prev, quizQuestions: values }));\r\n  };\r\n\r\n  //Add choice\r\n  function handleAddChoice(i) {\r\n    const values = { ...Formquiz };\r\n    values.quizQuestions[i].choices.push(\"\");\r\n    setFormquiz(values);\r\n  }\r\n\r\n  //Remove choice from question[i]\r\n  const handleRemoveChoice = (i, c) => {\r\n    const values = [...Formquiz.quizQuestions];\r\n    values[i].choices.splice(c, 1);\r\n    setFormquiz((prev) => ({ ...prev, quizQuestions: values }));\r\n  };\r\n\r\n  //Clear Formquiz\r\n  const clearState = () => {\r\n    setFormquiz({\r\n      quizName: \"\",\r\n      quizDescription: \"\",\r\n      quizQuestions: [\r\n        {\r\n          question: \"\",\r\n          typeQuestion: \"\",\r\n          choices: [\"\", \"\"],\r\n        },\r\n      ],\r\n    });\r\n    setEditquiz(null);\r\n  };\r\n\r\n  //Submit Formquiz\r\n  let handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //get UserConnected ID\r\n    let token = localStorage.getItem(\"token\");\r\n    axios\r\n      .post(\r\n        `http://localhost:3000/spacetune/api/survey/create/${id}`,\r\n        Formquiz,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authorization: `${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        const { _id, quizName, quizDescription } = res.data;\r\n        setquiz(\r\n          {\r\n            _id,\r\n            quizName,\r\n            quizDescription,\r\n          },\r\n          console.log(\"success\")\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    clearState();\r\n  };\r\n\r\n  //find the quiz to edit\r\n  useEffect(() => {\r\n    if (editquiz != null) {\r\n      async function ViewOldquiz() {\r\n        await axios\r\n          .get(\r\n            `http://localhost:3000/spacetune/api/survey/detailSurvey/${editquiz}`\r\n          )\r\n          .then((response) => {\r\n            setFormquiz(response.data);\r\n          });\r\n      }\r\n      ViewOldquiz();\r\n    }\r\n  }, [editquiz]);\r\n\r\n  //Edit quiz\r\n  const onClickEditQuiz = (e) => {\r\n    e.preventDefault();\r\n    //get UserConnected ID\r\n    let token = localStorage.getItem(\"token\");\r\n    axios\r\n      .put(\r\n        `http://localhost:3000/spacetune/api/survey/updateSurvey/${editquiz}`,\r\n        Formquiz,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authorization: `${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        const { _id, quizName, quizDescription } = res.data;\r\n        setquiz({ _id, quizName, quizDescription });\r\n        setEditquiz(null);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    clearState();\r\n  };\r\n\r\n  return (\r\n    <div key={Formquiz.id}>\r\n      <Form id=\"quiz\" name=\"quizQuestion\" onSubmit={handleSubmit}>\r\n        <div className=\"mt-3\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h3 className=\"text-xl font-semibold\">\r\n              {editquiz ? \"Edit\" : \"New\"} QUIZ\r\n            </h3>\r\n            <div className=\"flex space-x-10\">\r\n              <button\r\n                type=\"submit\"\r\n                onClick={(e) => {\r\n                  editquiz && onClickEditQuiz(e);\r\n                }}\r\n              >\r\n                {editquiz ? \"Edit\" : \"Save\"}\r\n              </button>\r\n\r\n              <Button\r\n                size=\"middle\"\r\n                className={` text-black text-sm font-medium py-1 px-4 rounded-lg transition-duration-200\r\n                           shadow-md hover:text-black `}\r\n                onClick={clearState}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Form.Group\r\n            className=\"mb-3 mt-3 p-2 border border-solid\"\r\n            controlId=\"formBasicText\"\r\n          >\r\n            <Form.Label>\r\n              <h6>Title</h6>{\" \"}\r\n            </Form.Label>\r\n            <Form.Control\r\n              name=\"quizName\"\r\n              value={Formquiz.quizName}\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n            />\r\n            <Form.Label className=\"mt-2\">\r\n              <h6> Description </h6>{\" \"}\r\n            </Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              name=\"quizDescription\"\r\n              style={{ height: \"5em\" }}\r\n              value={Formquiz.quizDescription}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        {Formquiz.quizQuestions.map((question, i) => {\r\n          return (\r\n            <div key={i} className=\"mt-4\">\r\n              <Accordion>\r\n                <Accordion.Item eventKey=\"0\">\r\n                  <Accordion.Header>Question {i + 1}</Accordion.Header>\r\n                  <Accordion.Body>\r\n                    <div className=\"flex items-center space-x-5\">\r\n                      <div className=\"w-3/4\">\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n                          <Form.Text>\r\n                            <strong>Question </strong>\r\n                          </Form.Text>\r\n                          <Form.Control\r\n                            name=\"question\"\r\n                            className=\"mt-2\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your question\"\r\n                            key={i}\r\n                            value={question.question}\r\n                            onChange={(e) => {\r\n                              handleChangeQuestion(i, e);\r\n                            }}\r\n                          />\r\n                        </Form.Group>\r\n                      </div>\r\n                      <div className=\"w-1/4\">\r\n                        <Form.Group\r\n                          className=\"mb-3\"\r\n                          controlId=\"formBasicPassword\"\r\n                        >\r\n                          <Form.Text>\r\n                            {\" \"}\r\n                            <strong> Type de question </strong>\r\n                          </Form.Text>\r\n                          <Form.Select\r\n                            name=\"typeQuestion\"\r\n                            className=\"mt-2\"\r\n                            value={question.typeQuestion}\r\n                            onChange={(e) => {\r\n                              handleChangeTypeQuestion(i, e);\r\n                            }}\r\n                          >\r\n                            <option></option>\r\n                            {Select_Type_Question}\r\n                          </Form.Select>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                    {question.choices.map((choice, c) => {\r\n                      return (\r\n                        <Form.Group key={c} className=\"mb-3\">\r\n                          {(() => {\r\n                            switch (question.typeQuestion) {\r\n                              case \"uniqueChoice\":\r\n                                return (\r\n                                  <Row key={c} className=\"flex items-center\">\r\n                                    <Col xs={1}>\r\n                                      <Form.Check\r\n                                        style={{ fontSize: \"1.4em\" }}\r\n                                        type=\"radio\"\r\n                                        disabled={true}\r\n                                      />\r\n                                    </Col>\r\n                                    <Col xs={10}>\r\n                                      <Form.Control\r\n                                        name=\"choice\"\r\n                                        placeholder=\"choice\"\r\n                                        value={choice}\r\n                                        onChange={(e) => {\r\n                                          handleChangeChoices(i, c, e);\r\n                                        }}\r\n                                      ></Form.Control>\r\n                                    </Col>\r\n                                    <Col xs={1}>\r\n                                      <i\r\n                                        className=\"w-7 h-7 cursor-pointer\"\r\n                                        onClick={(e) => {\r\n                                          handleRemoveChoice(i, c, e);\r\n                                        }}\r\n                                      >\r\n                                        X\r\n                                      </i>\r\n                                    </Col>\r\n                                  </Row>\r\n                                );\r\n                              case \"multipleChoice\":\r\n                                return (\r\n                                  <Row key={c} className=\"flex items-center\">\r\n                                    <Col xs={1}>\r\n                                      <Form.Check\r\n                                        style={{ fontSize: \"1.4em\" }}\r\n                                        type=\"checkbox\"\r\n                                        disabled={true}\r\n                                      />\r\n                                    </Col>\r\n                                    <Col xs={10}>\r\n                                      <Form.Control\r\n                                        name=\"choice\"\r\n                                        placeholder=\"choice\"\r\n                                        value={choice}\r\n                                        onChange={(e) => {\r\n                                          handleChangeChoices(i, c, e);\r\n                                        }}\r\n                                      ></Form.Control>\r\n                                    </Col>\r\n                                    <Col xs={1}>\r\n                                      <i\r\n                                        className=\"w-7 h-7 cursor-pointer\"\r\n                                        onClick={(e) => {\r\n                                          handleRemoveChoice(i, c, e);\r\n                                        }}\r\n                                      >\r\n                                        X\r\n                                      </i>\r\n                                    </Col>\r\n                                  </Row>\r\n                                );\r\n                              case \"text\":\r\n                                if (c === 0)\r\n                                  return (\r\n                                    <Form.Control\r\n                                      key={c}\r\n                                      size=\"sm\"\r\n                                      name=\"text_input\"\r\n                                      type=\"text\"\r\n                                      onChange={(e) => {\r\n                                        handleChangeChoices(i, c, e);\r\n                                      }}\r\n                                      placeholder=\"Enter your answer\"\r\n                                      disabled={true}\r\n                                    />\r\n                                  );\r\n                                break;\r\n                              case \"number\":\r\n                                if (c === 0)\r\n                                  return (\r\n                                    <Form.Control\r\n                                      key={c}\r\n                                      size=\"sm\"\r\n                                      name=\"number_input\"\r\n                                      type=\"number\"\r\n                                      onChange={(e) => {\r\n                                        handleChangeChoices(i, c, e);\r\n                                      }}\r\n                                      placeholder=\"Enter a number\"\r\n                                      disabled={true}\r\n                                    />\r\n                                  );\r\n                                break;\r\n                              default:\r\n                                break;\r\n                            }\r\n                          })()}\r\n                        </Form.Group>\r\n                      );\r\n                    })}\r\n                    <div className=\"flex justify-between items-center\">\r\n                      {[\"multipleChoice\", \"uniqueChoice\"].includes(\r\n                        `${question.typeQuestion}`\r\n                      ) ? (\r\n                        <div>\r\n                          <i\r\n                            className=\"bi bi-plus add-icon\"\r\n                            onClick={(e) => {\r\n                              handleAddChoice(i, e);\r\n                            }}\r\n                          >\r\n                            add new choice\r\n                          </i>\r\n                        </div>\r\n                      ) : (\r\n                        <div></div>\r\n                      )}\r\n                      {question.typeQuestion && (\r\n                        <div className=\"flex justify-self-end\">\r\n                          <TrashIcon\r\n                            className=\"w-10 h-10 text-red-400 cursor-pointer\"\r\n                            onClick={(e) => {\r\n                              handleDeleteClick(i, e);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n              </Accordion>\r\n            </div>\r\n          );\r\n        })}\r\n        <div>\r\n          <Button\r\n            size=\"sm\"\r\n            className=\"my-3 text-blue-500 border-blue-500\"\r\n            variant=\"outline-primary\"\r\n            onClick={handleAddClick}\r\n          >\r\n            {\" \"}\r\n            + new question\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Formquiz;\r\n","import { React, useEffect, useState } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport \"./survey.css\";\r\nimport axios from \"axios\";\r\nimport { DeleteIcon } from \"evergreen-ui\";\r\nimport ConfirmModal from \"../../../../components/Modal/ConfirmModal\";\r\nimport { useLoading } from \"../../../../hooks/useLoading\";\r\nimport { Empty } from \"antd\";\r\n\r\nfunction ListSurvey({ survey, setEditquiz }) {\r\n  const [list, setlistSurvey] = useState([]);\r\n  const [shouldRefresh, setShouldRefresh] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const { startLoading, stopLoading } = useLoading(false);\r\n  const { id } = useParams();\r\n  async function deleteQuiz(selectedItem) {\r\n    startLoading();\r\n    await axios\r\n      .delete(\r\n        `http://localhost:3000/spacetune/api/survey/deletesurvey/${selectedItem._id}`\r\n      )\r\n      .then((res) => {\r\n        setShouldRefresh(!shouldRefresh);\r\n      });\r\n    stopLoading();\r\n    setShowDeleteModal(false);\r\n    setSelectedItem(null);\r\n  }\r\n\r\n  function handleSurveyID(e, i) {\r\n    setEditquiz(list[i]._id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    //get UserConnected ID\r\n    let token = localStorage.getItem(\"token\");\r\n    axios\r\n      .get(`http://localhost:3000/spacetune/api/survey/listSurveys/${id}`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setlistSurvey(response.data.courses);\r\n        console.log(response.data, \"response\");\r\n      });\r\n  }, [survey, shouldRefresh]);\r\n\r\n  console.log(list, \"list\");\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <h3 className=\"text-xl font-semibold\">List quizs</h3>\r\n      <div className=\"col-lg-10 col-md-12 col-sm-12 mt-4\">\r\n        <ListGroup className=\"list-group mt-2 \">\r\n          {showDeleteModal && (\r\n            <ConfirmModal\r\n              title={`Are you sure to delete thie quiz \"${selectedItem.quizName}\" ?`}\r\n              confirmButton=\"Delete\"\r\n              cancelButton=\"Cancel\"\r\n              onClickCancel={() => setShowDeleteModal(false)}\r\n              onClickConfirm={() => deleteQuiz(selectedItem)}\r\n            />\r\n          )}\r\n          {list.length !== 0 ? (\r\n            list.map((survey, i) => {\r\n              return (\r\n                <ListGroup.Item key={i} className=\"list-group-item\">\r\n                  <div>\r\n                    <strong\r\n                      style={{ color: \"#1c78fa\" }}\r\n                      className=\"text-uppercase mr-4\"\r\n                    >\r\n                      {survey.quizName}\r\n                    </strong>\r\n                  </div>\r\n                  <div className=\"mt-2\">\r\n                    <strong>Descirption: </strong>\r\n                    <p style={{ textAlign: \"justify\" }}>\r\n                      {survey.quizDescription}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"mt-2\">\r\n                    <Link\r\n                      style={{\r\n                        textDecoration: \"none\",\r\n                        position: \"absolute\",\r\n                        top: \"7px\",\r\n                        right: \"20px\",\r\n                      }}\r\n                      exact\r\n                      to={`viewStat/${survey._id}`}\r\n                      title=\"Take a look\"\r\n                    >\r\n                      view stat\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"d-flex ml-auto\">\r\n                    <span\r\n                      title=\"Delete\"\r\n                      className=\"p-2\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => {\r\n                        setShowDeleteModal(true);\r\n                        setSelectedItem(survey);\r\n                      }}\r\n                    >\r\n                      <DeleteIcon className=\"w-5  h-5\" />\r\n                    </span>\r\n                    <span\r\n                      title=\"Edit\"\r\n                      className=\"p-2\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={(e) => {\r\n                        handleSurveyID(e, i);\r\n                      }}\r\n                    >\r\n                      edit\r\n                    </span>\r\n                  </div>\r\n                </ListGroup.Item>\r\n              );\r\n            })\r\n          ) : (\r\n            <Empty\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              description={<span>Empty list</span>}\r\n            />\r\n          )}\r\n        </ListGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListSurvey;\r\n","import { React, useState } from \"react\";\r\nimport Formquiz from \"./FormSurvey\";\r\nimport ListSurvey from \"./ListSurvey\";\r\n\r\nconst Survey = () => {\r\n  const [survey, setSurvey] = useState({});\r\n  const [editquiz, setEditquiz] = useState(null);\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <div key={1} className=\"w-5/12\">\r\n        <ListSurvey survey={survey} setEditquiz={setEditquiz} />\r\n      </div>\r\n      <div key={2} className=\"w-6/12\">\r\n        <Formquiz\r\n          setSurvey={setSurvey}\r\n          editquiz={editquiz}\r\n          setEditquiz={setEditquiz}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Survey;\r\n","import { React, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport Answer from \"./Answer\";\r\n\r\nfunction DisplaySurveys({ survey }) {\r\n  const [selectedQuiz, setSelectedQuiz] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <div className=\"flex items-center mt-2\">\r\n      {survey.map((s, i) => {\r\n        return (\r\n          <Card key={i} border=\"primary\" className=\"w-1/2 h-40 mx-2\">\r\n            <Card.Body>\r\n              <Card.Title>\r\n                <strong>Survey: </strong> {s.quizName}\r\n              </Card.Title>\r\n              <Card.Text>\r\n                <strong>Description: </strong> {s.quizDescription}\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer className=\"mt-2 text-center\">\r\n              <span\r\n                className=\"font-bold text-blue-500\"\r\n                onClick={() => {\r\n                  setSelectedQuiz(s._id);\r\n                  setShowModal(true);\r\n                }}\r\n              >\r\n                Answer this quiz\r\n              </span>\r\n              <i\r\n                className=\"bi bi-pencil-fill\"\r\n                style={{\r\n                  fontSize: \"1rem\",\r\n                  color: \"cornflowerblue\",\r\n                  marginLeft: \"0.4em\",\r\n                }}\r\n              ></i>\r\n            </Card.Footer>\r\n          </Card>\r\n        );\r\n      })}\r\n      {showModal && (\r\n        <Answer\r\n          idPreview={selectedQuiz}\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplaySurveys;\r\n"],"names":["Breadcrumb","title","setIsOpen","isOpen","menu","className","onClick","fill","viewBox","width","height","x","y","onChange","placeholder","type","LightBox","images","photoIndex","isLightBoxOpen","closePortal","setPhotoIndex","mainSrc","onCloseRequest","nextSrc","length","prevSrc","onMovePrevRequest","onMoveNextRequest","ConfirmModal","content","confirmButton","onClickConfirm","cancelButton","onClickCancel","icon","useState","open","setOpen","cancelButtonRef","useRef","show","as","Fragment","initialFocus","onClose","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","ref","subtitle","useLightBox","setLightBoxOpen","close","useLoading","defaultValue","loading","setLoading","stopLoading","startLoading","isLoading","idPreview","showModal","setShowModal","CollectAnswer","setCollectAnswer","quizQuestions","quizName","quizDescription","_id","SurveyJsonObjects","setSurveyJsonObjects","value","setValue","handleChangeChoice","i","e","values","answer","target","useEffect","axios","then","response","data","map","q","typeQuestion","question","warning","SurveyDetails","visible","footer","onCancel","centered","onSubmit","preventDefault","quizId","token","localStorage","getItem","answers","headers","authorization","res","console","log","catch","err","message","controlId","choices","choice","c","xs","style","fontSize","name","push","handleUniqueChoice","checked","index","indexOf","splice","handleMultipleChoices","size","Select_Type_Question","label","option","key","setquiz","editquiz","setEditquiz","Formquiz","setFormquiz","id","useParams","handleChange","event","prevProps","handleChangeChoices","handleRemoveChoice","prev","clearState","ViewOldquiz","Form","error","onClickEditQuiz","Accordion","eventKey","handleChangeQuestion","handleChangeTypeQuestion","Row","Col","disabled","includes","handleAddChoice","TrashIcon","handleDeleteClick","variant","survey","list","setlistSurvey","shouldRefresh","setShouldRefresh","showDeleteModal","setShowDeleteModal","selectedItem","setSelectedItem","courses","ListGroup","deleteQuiz","color","textAlign","textDecoration","position","top","right","exact","to","cursor","DeleteIcon","handleSurveyID","image","Empty","description","setSurvey","selectedQuiz","setSelectedQuiz","s","border","marginLeft"],"sourceRoot":""}