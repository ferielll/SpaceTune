{"version":3,"file":"static/js/778.87bfc5ea.chunk.js","mappings":"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","sources":["components/Breadcrum.jsx","components/InputSearch.jsx","components/LightBox.jsx","components/Title.jsx","components/form/Input.jsx","hooks/useLightBox.js","hooks/useLoading.js","pages/app/Post/Post.jsx","pages/app/Posts/NewBlog.jsx","pages/app/Posts/ListPosts.jsx","pages/app/Posts/index.jsx"],"sourcesContent":["export default function Breadcrumb({ title, setIsOpen, isOpen, menu }) {\r\n  return (\r\n    <div className=\"flex justify-start items-center bg-white shadow \">\r\n      <div className=\"px-2 sm:px-6 lg:px-4\">\r\n        {isOpen ? (\r\n          <svg\r\n            onClick={() => setIsOpen(!isOpen)}\r\n            className=\"  z-30 flex items-center cursor-pointer right-10 top-6\"\r\n            fill=\"#000000\"\r\n            viewBox=\"0 0 100 80\"\r\n            width=\"20\"\r\n            height=\"20\"\r\n          >\r\n            <rect width=\"10\" height=\"100\"></rect>\r\n            <rect x=\"30\" width=\"10\" height=\"100\"></rect>\r\n            <rect x=\"60\" width=\"10\" height=\"100\"></rect>\r\n          </svg>\r\n        ) : (\r\n          <svg\r\n            onClick={() => setIsOpen(!isOpen)}\r\n            className=\"  z-30 flex items-center cursor-pointer right-10 top-6\"\r\n            fill=\"#000000\"\r\n            viewBox=\"0 0 100 80\"\r\n            width=\"20\"\r\n            height=\"20\"\r\n          >\r\n            <rect width=\"100\" height=\"10\"></rect>\r\n            <rect y=\"30\" width=\"100\" height=\"10\"></rect>\r\n            <rect y=\"60\" width=\"100\" height=\"10\"></rect>\r\n          </svg>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className=\"text-base py-2 px-2 sm:px-6 lg:px-4  font-medium text-gray-700\">\r\n          {title && title}\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { SearchIcon } from \"@heroicons/react/outline\";\r\nimport React from \"react\";\r\n\r\nconst InputSearch = ({ onChange, className, placeholder }) => {\r\n  return (\r\n    <form>\r\n      <div className=\"flex relative\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder={placeholder ? placeholder : \"Search\"}\r\n          className={`w-full py-3 pl-12 pr-4 text-gray-500 border rounded-md outline-none bg-gray-50 focus:bg-white focus:border-indigo-600 ${className}`}\r\n        />\r\n        <SearchIcon className=\"absolute top-0 bottom-0 w-6 h-6 my-auto text-gray-400 left-3\" />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputSearch;\r\n","import Light from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\"; // This only needs to be imported once in your app\r\n\r\nexport default function LightBox({\r\n  images = [],\r\n  photoIndex,\r\n  isLightBoxOpen,\r\n  closePortal,\r\n  setPhotoIndex,\r\n}) {\r\n  if (!isLightBoxOpen) {\r\n    return null;\r\n  }\r\n  if (typeof images === \"string\") {\r\n    return (\r\n      <Light\r\n        mainSrc={images}\r\n        onCloseRequest={closePortal}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Light\r\n      mainSrc={images[photoIndex]}\r\n      nextSrc={images[(photoIndex + 1) % images.length]}\r\n      prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n      onCloseRequest={closePortal}\r\n      onMovePrevRequest={() =>\r\n        setPhotoIndex((photoIndex + images.length - 1) % images.length)\r\n      }\r\n      onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Title = ({ title, subtitle }) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl text-gray-800 font-semibold\">{title}</h1>\r\n      <p className=\"mt-3 text-gray-500\">{subtitle && subtitle}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\n\r\nconst Input = React.forwardRef(\r\n  (\r\n    {\r\n      icon = undefined,\r\n      hasError = false,\r\n      error = undefined,\r\n      label,\r\n      className = undefined,\r\n      ...others\r\n    },\r\n    ref\r\n  ) => {\r\n    const defaultClassNames = `w-full px-4 py-2 text-sm border rounded-md form-input focus:border-blue-400 focus:outline-none focus:ring-1 focus:ring-blue-600`;\r\n    return (\r\n      <div className=\"flex flex-col w-full relative\">\r\n        {label && (\r\n          <label\r\n            htmlFor={others?.id}\r\n            className=\"block mb-1 text-sm font-semibold text-gray-700\"\r\n          >\r\n            {label}\r\n          </label>\r\n        )}\r\n        <div className={`${icon && \"relative\"}`}>\r\n          {icon && (\r\n            <span className=\"absolute inline-flex items-center h-full px-3 text-sm text-gray-500 border border-gray-300 border-r-1 rounded-l-md bg-gray-50\">\r\n              {icon}\r\n            </span>\r\n          )}\r\n          <input\r\n            ref={ref}\r\n            className={`${defaultClassNames} ${className} ${icon && \"pl-20\"}\r\n             ${\r\n               others?.disabled && \"bg-gray-200 opacity-70 cursor-not-allowed\"\r\n             }`}\r\n            {...others}\r\n          />\r\n        </div>\r\n        {hasError && (\r\n          <span className={`text-sm text-red-500 'text-red-600'}`}>\r\n            {error}\r\n          </span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\nexport default Input;\r\n","import { useState } from \"react\";\r\n\r\nexport default function useLightBox() {\r\n  const [isLightBoxOpen, setLightBoxOpen] = useState(false);\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  const open = () => setLightBoxOpen(true);\r\n  const close = () => {\r\n    setLightBoxOpen(false);\r\n    setPhotoIndex(0);\r\n  };\r\n  return {\r\n    isLightBoxOpen,\r\n    setLightBoxOpen,\r\n    photoIndex,\r\n    setPhotoIndex,\r\n    open,\r\n    close,\r\n  };\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport function useLoading(defaultValue = false) {\r\n  const [loading, setLoading] = useState(defaultValue);\r\n  const stopLoading = () => {\r\n    setLoading(false);\r\n  };\r\n  const startLoading = () => {\r\n    setLoading(true);\r\n  };\r\n  return {\r\n    isLoading: loading,\r\n    stopLoading,\r\n    startLoading,\r\n  };\r\n}\r\n","\r\nimport \"./Post.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Music from \"../../../assets/music.png\";\r\nimport useLightBox from \"../../../hooks/useLightBox\";\r\nimport LightBox from \"../../../components/LightBox\";\r\n\r\nexport default function Post({ post }) {\r\n  // custom hook for handle the lightbox component\r\n  const lightBox = useLightBox();\r\n  const images = Music;\r\n  return (\r\n    <div className=\"max-w-md w-full mx-auto mt-3 shadow-lg border-black rounded-md duration-300 hover:shadow-sm hover:-translate-y-2\">\r\n      <div className=\"postInfo\">\r\n        {lightBox.isLightBoxOpen && images && (\r\n          <LightBox\r\n            images={images}\r\n            {...lightBox}\r\n            closePortal={lightBox.close}\r\n          />\r\n        )}\r\n        <img\r\n          onClick={lightBox.open}\r\n          src={`http://localhost:3000/${post.Image}`}\r\n          loading=\"lazy\"\r\n          alt={\"Music\"}\r\n          className=\"w-full cursor-pointer\"\r\n        />\r\n\r\n        <hr />\r\n        <span className=\"postDate\">\r\n          {new Date(post.createdAt).toDateString()}\r\n        </span>\r\n        <div className=\"pt-2 ml-4 mr-2 mb-3 cursor-pointer\">\r\n          <h3 className=\"text-xl font-semibold text-gray-900\">\r\n            <Link to={`/post/${post._id}`} className=\"link\">\r\n              <span className=\"postTitle\">{post.title}</span>\r\n            </Link>\r\n          </h3>\r\n          <p className=\"text-gray-500 text-sm mt-1 line-clamp-3\">\r\n            {post.content}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Button } from \"antd\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport Input from \"../../../components/form/Input\";\r\nimport { useLoading } from \"../../../hooks/useLoading\";\r\nimport { useUser } from \"../../../hooks/useUser\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nfunction NewBlog({ isModalVisible, setModalVisible,refetch ,setRefetch }) {\r\n  //helpers\r\n  const { user } = useUser();\r\n  const { isLoading, startLoading, stopLoading } = useLoading(false);\r\n  const [file, setFile] = useState();\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const saveFile = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setFileName(e.target.files[0].name);\r\n  };\r\n  \r\n\r\n  const onSubmit = async (e) => {\r\n\r\n    //startLoading();\r\n    // const { subject, content, title,  username } = data;\r\n    // const user = user._id.name;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"Image\", file);\r\n    formData.append(\"subject\", subject);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"fileName\", fileName);\r\nconsole.log(\"+++++\")\r\n    \r\n    try {\r\n      await axios\r\n        .post(\"http://localhost:3000/spacetune/api/post/create\", \r\n        formData\r\n        )\r\n        .then((res) => {\r\n          console.log(res, \"res\");\r\n          if (!res.data.success) {\r\n            return;\r\n          }\r\n        });\r\n        setRefetch(refetch+1);\r\n      setModalVisible(false);\r\n      \r\n    } catch (err) {\r\n      console.log(err, \"error\");\r\n    }\r\n    \r\n    console.log('post',formData)\r\n  };\r\n\r\n  const updateSubject = async (e) => {\r\n    setSubject(e.target.value);\r\n    console.log(\"subject\", subject);\r\n  };\r\n\r\n  const updateTitle = async (e) => {\r\n    setTitle(e.target.value);\r\n    console.log(\"title\", title);\r\n  };\r\n\r\n  const updateContent = async (e) => {\r\n    setContent(e.target.value);\r\n    console.log(\"content\", content);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Add new blog\"\r\n      visible={isModalVisible}\r\n      width=\"350px\"\r\n      onCancel={() => setModalVisible(false)}\r\n      centered\r\n      footer={[\r\n        <button\r\n          onClick={onSubmit}\r\n          className={` text-white text-sm font-medium py-1 px-4 mr-4 rounded-lg transition-duration-200\r\n                           shadow-md bg-blue-600 `}\r\n        >\r\n          Confirm\r\n        </button>,\r\n      ]}\r\n    >\r\n      <div>\r\n            <Input\r\n            //  {...field}\r\n              label=\"title\"\r\n              placeholder=\"title\"\r\n            //  hasError={invalid}\r\n              //error={error && error.message}\r\n              onChange={updateTitle}\r\n            />\r\n  \r\n            <Input\r\n            //  {...field}\r\n              label=\"subject\"\r\n              placeholder=\"Write subject...\"\r\n              className=\"whitespace-pre-wrap\"\r\n            //  hasError={invalid}\r\n             // error={error && error.message}\r\n               onChange={updateSubject}\r\n            />\r\n     \r\n            <Input\r\n            //  {...field}\r\n              label=\"content\"\r\n              type=\"text\"\r\n              placeholder=\"content\"\r\n            //  hasError={invalid}\r\n             // error={error && error.message}\r\n               onChange={updateContent}\r\n            />\r\n       \r\n            <TextField\r\n            type=\"file\"\r\n            label=\"Image\"\r\n            // name=\"uploaded_file\"\r\n            variant=\"outlined\"\r\n            onChange={saveFile}\r\n          />\r\n          \r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default NewBlog;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect, Fragment } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport Breadcrumb from \"../../../components/Breadcrum\";\r\nimport InputSearch from \"../../../components/InputSearch\";\r\nimport Title from \"../../../components/Title\";\r\nimport { useLoading } from \"../../../hooks/useLoading\";\r\nimport { useUser } from \"../../../hooks/useUser\";\r\nimport Post from \"../Post/Post\";\r\nimport NewBlog from \"../Posts/NewBlog\";\r\nimport \"./posts.css\";\r\n\r\nexport default function ListPosts({posts,refetch ,setRefetch}) {\r\n  \r\n   //states (modals visibles)\r\n   const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n   const [showEditModal, setShowEditModal] = useState(false);\r\n   const [isModalVisible, setModalVisible] = useState(false);\r\n   //select item to delete\r\n   const [selectedItem, setSelectedItem] = useState(null);\r\n   const { user } = useUser();\r\n  const {\r\n    isLoading: isDeletingLoading,\r\n    startLoading,\r\n    stopLoading,\r\n  } = useLoading(false);\r\n   const getAllBlogs= () =>{\r\n    axios\r\n      .get(\r\n        `http://localhost:3000/spacetune/api/post/getAll`\r\n      )\r\n      .then((res) => res.data)\r\n      \r\n    };\r\n  \r\n  async function deleteTraining(selectedItem) {\r\n    startLoading();\r\n    await axios.delete(\r\n      `http://localhost:3000/spacetune/api/post/delete/${selectedItem._id}`\r\n    );\r\n    stopLoading();\r\n    setShowDeleteModal(false);\r\n    setSelectedItem(null);\r\n    \r\n  }\r\n  \r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb title={\"All posts\"} />\r\n      <div className=\"flex flex-row justify-center pt-1 mx-auto\">\r\n        <div className=\"mt-4 px-2 w-full max-w-7xl lg:px-4\">\r\n          <div className=\"flex justify-between text-start w-full\">\r\n            <Title\r\n              title=\"Posts\"\r\n              subtitle=\"Posts that are loved by the community. Updated every hour.\"\r\n            />\r\n            <InputSearch />\r\n            <button\r\n                onClick={() => setModalVisible(true)}\r\n                className={`text-base leading-6 font-medium py-1 px-4 mr-4 rounded-lg tracking-wide shadow-md bg-navbar-color text-gray-100`}\r\n              >\r\n                Add new blog\r\n              </button>\r\n              {isModalVisible && (\r\n              < NewBlog\r\n                isModalVisible={isModalVisible}\r\n                setModalVisible={setModalVisible}\r\n                setRefetch = {setRefetch}\r\n                refetch={refetch}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"my-4 grid gap-4 sm:grid-cols-2 lg:grid-cols-4\">\r\n            {posts.map((p) => (\r\n              <Post post={p} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\nimport React, { useState , useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ListPosts from \"./ListPosts\";\r\nimport \"./posts.css\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useUser } from \"../../../hooks/useUser\";\r\n\r\nexport default function Posts() {\r\n  const [posts, setPosts] = useState([]);\r\n  const {search} = useLocation();\r\n  const { user } = useUser();\r\n  const [refetch, setRefetch] = useState(0);  \r\n  const fetchPosts = async () => {\r\n    const res = await axios.get(\"http://localhost:3000/spacetune/api/post/getAll\" + search);\r\n    setPosts(res.data);\r\n   //console.log(res)\r\n  };\r\n  //console.log(location);\r\n  useEffect(()=>{\r\n    fetchPosts();\r\n  },[refetch]);\r\n  useEffect(() => {\r\n    \r\n    fetchPosts();\r\n  }, [search]);\r\n  \r\n  //console.log('posts', posts)\r\n  return (\r\n    <div>\r\n      <ListPosts posts={posts} setRefetch = {setRefetch}\r\n                refetch={refetch}/>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Breadcrumb","title","setIsOpen","isOpen","menu","className","onClick","fill","viewBox","width","height","x","y","onChange","placeholder","type","LightBox","images","photoIndex","isLightBoxOpen","closePortal","setPhotoIndex","mainSrc","onCloseRequest","nextSrc","length","prevSrc","onMovePrevRequest","onMoveNextRequest","subtitle","Input","React","ref","icon","undefined","hasError","error","label","others","htmlFor","id","disabled","useLightBox","useState","setLightBoxOpen","open","close","useLoading","defaultValue","loading","setLoading","stopLoading","startLoading","isLoading","Post","post","lightBox","Music","src","Image","alt","Date","createdAt","toDateString","to","_id","content","isModalVisible","setModalVisible","refetch","setRefetch","useUser","user","file","setFile","fileName","setFileName","subject","setSubject","setContent","setTitle","onSubmit","e","formData","FormData","append","console","log","axios","then","res","data","success","updateSubject","target","value","updateTitle","updateContent","Modal","visible","onCancel","centered","footer","TextField","variant","files","name","ListPosts","posts","Fragment","Breadcrum","Title","InputSearch","map","p","Posts","setPosts","search","useLocation","fetchPosts","useEffect"],"sourceRoot":""}